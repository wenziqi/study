2020.10.27
今天继续优化代码。玩家登陆接口onlogin业务逻辑非常多，尤其是活动，有不少for循环，甚至是双重循环。还有些for循环有递归调用函数。
1.递归调用改为非递归。
2.for循环里面听到的函数如math.max、os.time等，放到for循环外面用local变量保存，提高lua虚拟机的访问效率。
3.table.insert(tb,v)改成tb[#tb+1]=v
4.有些活动，玩家登陆时会有向全服所有在线玩家广播的处理，按理应当避免或减少全服广播处理。

――――――――――――――――-
1.登陆时，业务逻辑太多，应当分时处理，每秒钟处理若干业务，可根据业务优先度安排处理。

2.尽量避免递归调用。

3.登陆时服务端不必推送太多数据，客户端可以在玩家打开相关界面时再向服务端请求，并根据业务特点、数据量大小做缓存处理，减少服务端压力。

4.非排行榜的，其他界面的数据排序，比如英雄栏、背包、好友列别，可以交给客户端排序。

5.尽量避免双重for循环的写法。

6.设计好数据结构非常重要，可以用字典，加载数据时预处理数据，避免for循环查找。